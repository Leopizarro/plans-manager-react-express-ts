import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"

interface ActivityImportance {
    id: number
    code: string
    description: string
}

interface ActivityImportanceApiResponse {
    ok:boolean,
    message: string,
    activityImportances: ActivityImportance[]
}

export const activityImportanceApiSlice = createApi({
  baseQuery: fetchBaseQuery({ baseUrl: `${import.meta.env.VITE_BACKEND_ROOT_URL}/activity-importances`}),
  reducerPath: "activityImportancesApi",
  // Used for caching and invalidation.
  tagTypes: ["ActivityImportances"],
  endpoints: build => ({
    getActivityImportances: build.query<ActivityImportanceApiResponse, void>({
      query: () => '/',
    }),
  }),
})

// Hooks are auto-generated by RTK-Query
export const { useGetActivityImportancesQuery } = activityImportanceApiSlice;