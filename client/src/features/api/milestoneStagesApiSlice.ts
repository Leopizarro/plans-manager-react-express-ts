import { createApi, fetchBaseQuery } from "@reduxjs/toolkit/query/react"

interface MilestoneStage {
    id: number
    code: string
    description: string
}

interface MilestoneStageApiResponse {
    ok: boolean,
    message: string,
    milestoneStages: MilestoneStage[]
}

export const milestoneStageApiSlice = createApi({
  baseQuery: fetchBaseQuery({ baseUrl: `${import.meta.env.VITE_BACKEND_ROOT_URL}/milestone-stages`}),
  reducerPath: "milestoneStagesApi",
  //Used for caching and invalidation.
  tagTypes: ["MilestoneStages"],
  endpoints: build => ({
    getMilestoneStages: build.query<MilestoneStageApiResponse, void>({
      query: () => '/',
    }),
  }),
})

// Hooks are auto-generated by RTK-Query
export const { useGetMilestoneStagesQuery } = milestoneStageApiSlice;